// source: Contact.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.ErrorContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.NotificationContent', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Classification', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Type', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.NotificationContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.NotificationContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.ErrorContent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.ErrorContent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    classification: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    content: msg.getContent_asB64(),
    senderid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    receiverid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage;
  return proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Classification} */ (reader.readEnum());
      msg.setClassification(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSenderid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReceiverid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassification();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSenderid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getReceiverid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Classification = {
  SYSTEM_MESSAGE: 0,
  CUSTOMER_MESSAGE: 1,
  PARKING_LOT_MESSAGE: 2
};

/**
 * @enum {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Type = {
  NOTIFICATION: 0,
  TEXT_MESSAGE: 1,
  BOOKING_REQUEST: 2,
  BOOKING_CANCELLATION: 3,
  BOOKING_PROCESSING: 4,
  BOOKING_ACCEPTANCE: 5,
  BOOKING_REJECT: 6,
  BOOKING_FINISH: 7,
  AVAILABILITY_UPDATE: 8,
  IMAGE: 9,
  ERROR: 10
};

/**
 * optional Classification classification = 1;
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Classification}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getClassification = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Classification} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Classification} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.setClassification = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Type type = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Type}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getType = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.Type} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes content = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes content = 3;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 senderId = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getSenderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.setSenderid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 receiverId = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getReceiverid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.setReceiverid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string timestamp = 6;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.SaigonParkingMessage.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.NotificationContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    notification: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.NotificationContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.NotificationContent;
  return proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.NotificationContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.NotificationContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotification(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.NotificationContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNotification();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string notification = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.prototype.getNotification = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.NotificationContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.NotificationContent.prototype.setNotification = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sender: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent;
  return proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.TextMessageContent.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    customername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    customerlicense: jspb.Message.getFieldWithDefault(msg, 4, ""),
    amountofparkinghour: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent;
  return proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerlicense(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmountofparkinghour(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCustomername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCustomerlicense();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmountofparkinghour();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 parkingLotId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string customerName = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.getCustomername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.setCustomername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string customerLicense = 4;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.getCustomerlicense = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.setCustomerlicense = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double amountOfParkingHour = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.getAmountofparkinghour = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRequestContent.prototype.setAmountofparkinghour = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent;
  return proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingCancellationContent.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    qrcode: msg.getQrcode_asB64(),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    createdat: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent;
  return proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setQrcode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQrcode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreatedat();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes qrCode = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.getQrcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes qrCode = 2;
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.getQrcode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getQrcode()));
};


/**
 * optional bytes qrCode = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.getQrcode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getQrcode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.setQrcode = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional int64 parkingLotId = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string createdAt = 4;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.getCreatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingProcessingContent.prototype.setCreatedat = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent;
  return proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingAcceptanceContent.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent;
  return proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string reason = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingRejectContent.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent;
  return proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.BookingFinishContent.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newavailability: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent;
  return proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewavailability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNewavailability();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 newAvailability = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.prototype.getNewavailability = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.AvailabilityUpdateContent.prototype.setNewavailability = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.ErrorContent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.toObject = function(includeInstance, msg) {
  var f, obj = {
    internalerrorcode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.ErrorContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.ErrorContent;
  return proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.ErrorContent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.ErrorContent}
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInternalerrorcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.ErrorContent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInternalerrorcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string internalErrorCode = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.prototype.getInternalerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.ErrorContent} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.ErrorContent.prototype.setInternalerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    qrcode: msg.getQrcode_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse;
  return proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setQrcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQrcode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes qrCode = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.prototype.getQrcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes qrCode = 1;
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.prototype.getQrcode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getQrcode()));
};


/**
 * optional bytes qrCode = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.prototype.getQrcode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getQrcode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeResponse.prototype.setQrcode = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesstoken: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest;
  return proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.contact.GenerateSocketConnectQrCodeRequest.prototype.setAccesstoken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.com.bht.saigonparking.api.grpc.contact);
