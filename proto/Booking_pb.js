// source: Booking.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.Booking', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.BookingDetail', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.BookingHistory', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.BookingList', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.BookingStatus', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.Booking, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.Booking.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.Booking';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.BookingHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.BookingHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.BookingDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.BookingDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.booking.BookingList.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.BookingList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.BookingList.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.BookingList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.Booking.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.Booking} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    parkinglotname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 4, 0),
    licenseplate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdat: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lateststatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    isfinished: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.Booking;
  return proto.com.bht.saigonparking.api.grpc.booking.Booking.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.Booking} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParkinglotname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomerid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseplate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedat(value);
      break;
    case 7:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (reader.readEnum());
      msg.setLateststatus(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsfinished(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.Booking.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.Booking} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getParkinglotname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCustomerid();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLicenseplate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedat();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLateststatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getIsfinished();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 parkingLotId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string parkingLotName = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getParkinglotname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setParkinglotname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 customerId = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getCustomerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string licensePlate = 5;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getLicenseplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setLicenseplate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string createdAt = 6;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getCreatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setCreatedat = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional BookingStatus latestStatus = 7;
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getLateststatus = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setLateststatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional bool isFinished = 8;
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.getIsfinished = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.Booking.prototype.setIsfinished = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    note: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.BookingHistory;
  return proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional BookingStatus status = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.getStatus = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string timestamp = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string note = 4;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    booking: (f = msg.getBooking()) && proto.com.bht.saigonparking.api.grpc.booking.Booking.toObject(includeInstance, f),
    historyList: jspb.Message.toObjectList(msg.getHistoryList(),
    proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.BookingDetail;
  return proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.booking.Booking;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.booking.Booking.deserializeBinaryFromReader);
      msg.setBooking(value);
      break;
    case 2:
      var value = new proto.com.bht.saigonparking.api.grpc.booking.BookingHistory;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBooking();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.booking.Booking.serializeBinaryToWriter
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.bht.saigonparking.api.grpc.booking.BookingHistory.serializeBinaryToWriter
    );
  }
};


/**
 * optional Booking booking = 1;
 * @return {?proto.com.bht.saigonparking.api.grpc.booking.Booking}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.getBooking = function() {
  return /** @type{?proto.com.bht.saigonparking.api.grpc.booking.Booking} */ (
    jspb.Message.getWrapperField(this, proto.com.bht.saigonparking.api.grpc.booking.Booking, 1));
};


/**
 * @param {?proto.com.bht.saigonparking.api.grpc.booking.Booking|undefined} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail} returns this
*/
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.setBooking = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.clearBooking = function() {
  return this.setBooking(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.hasBooking = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated BookingHistory history = 2;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory>}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.booking.BookingHistory, 2));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail} returns this
*/
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.setHistoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingHistory}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.addHistory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.bht.saigonparking.api.grpc.booking.BookingHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingDetail} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingDetail.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.BookingList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingList: jspb.Message.toObjectList(msg.getBookingList(),
    proto.com.bht.saigonparking.api.grpc.booking.Booking.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingList}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.BookingList;
  return proto.com.bht.saigonparking.api.grpc.booking.BookingList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingList}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.booking.Booking;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.booking.Booking.deserializeBinaryFromReader);
      msg.addBooking(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.BookingList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.booking.Booking.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Booking booking = 1;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.booking.Booking>}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.prototype.getBookingList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.booking.Booking>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.booking.Booking, 1));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.booking.Booking>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingList} returns this
*/
proto.com.bht.saigonparking.api.grpc.booking.BookingList.prototype.setBookingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.Booking=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.Booking}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.prototype.addBooking = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.bht.saigonparking.api.grpc.booking.Booking, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingList} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingList.prototype.clearBookingList = function() {
  return this.setBookingList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nrow: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNrow(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNrow();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional BookingStatus status = 1;
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.getStatus = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 nRow = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.getNrow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.setNrow = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 pageNumber = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional BookingStatus status = 1;
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.prototype.getStatus = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nrow: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNrow(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNrow();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 customerId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.getCustomerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 nRow = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.getNrow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.setNrow = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 pageNumber = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfCustomerRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nrow: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNrow(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getNrow();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional BookingStatus status = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.getStatus = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 nRow = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.getNrow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.setNrow = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 pageNumber = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GetAllBookingOfParkingLotRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional BookingStatus status = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.prototype.getStatus = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingOfParkingLotRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    customerid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    licenseplate: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLicenseplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCustomerid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLicenseplate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 customerId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.getCustomerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string licensePlate = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.getLicenseplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingRequest.prototype.setLicenseplate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    qrcode: msg.getQrcode_asB64(),
    createdat: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse;
  return proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setQrcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQrcode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getCreatedat();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes qrCode = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.getQrcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes qrCode = 2;
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.getQrcode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getQrcode()));
};


/**
 * optional bytes qrCode = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.getQrcode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getQrcode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.setQrcode = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string createdAt = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.getCreatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CreateBookingResponse.prototype.setCreatedat = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    note: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BookingStatus status = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus}
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.getStatus = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.BookingStatus} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string note = 4;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.UpdateBookingStatusRequest.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statuscountMap: (f = msg.getStatuscountMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse;
  return proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getStatuscountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatuscountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * map<int64, int64> statusCount = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.prototype.getStatuscountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.CountAllBookingGroupByStatusResponse.prototype.clearStatuscountMap = function() {
  this.getStatuscountMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.FinishBookingRequest.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bookingid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest;
  return proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookingid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBookingid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string bookingId = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.prototype.getBookingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeRequest.prototype.setBookingid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    qrcode: msg.getQrcode_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse;
  return proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setQrcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQrcode_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes qrCode = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.prototype.getQrcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes qrCode = 1;
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.prototype.getQrcode_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getQrcode()));
};


/**
 * optional bytes qrCode = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getQrcode()`
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.prototype.getQrcode_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getQrcode()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.booking.GenerateBookingQrCodeResponse.prototype.setQrcode = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.com.bht.saigonparking.api.grpc.booking.BookingStatus = {
  ALL: 0,
  CREATED: 1,
  ACCEPTED: 2,
  REJECTED: 3,
  CANCELLED: 4,
  FINISHED: 5
};

goog.object.extend(exports, proto.com.bht.saigonparking.api.grpc.booking);
