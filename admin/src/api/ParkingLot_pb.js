// source: ParkingLot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    availableslot: jspb.Message.getFieldWithDefault(msg, 6, 0),
    totalslot: jspb.Message.getFieldWithDefault(msg, 7, 0),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableslot(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalslot(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getAvailableslot();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTotalslot();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ParkingLotType type = 3;
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getType = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double latitude = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double longitude = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 availableSlot = 6;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getAvailableslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setAvailableslot = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 totalSlot = 7;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getTotalslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setTotalslot = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double distance = 8;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ratingaverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    numberofrating: jspb.Message.getFieldWithDefault(msg, 5, 0),
    imagedata: msg.getImagedata_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRatingaverage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofrating(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagedata(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRatingaverage();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getNumberofrating();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getImagedata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string phone = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double ratingAverage = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getRatingaverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setRatingaverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 numberOfRating = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getNumberofrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setNumberofrating = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes imageData = 6;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getImagedata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes imageData = 6;
 * This is a type-conversion wrapper around `getImagedata()`
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getImagedata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagedata()));
};


/**
 * optional bytes imageData = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagedata()`
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getImagedata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagedata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setImagedata = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int64 version = 7;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    openinghour: jspb.Message.getFieldWithDefault(msg, 5, ""),
    closinghour: jspb.Message.getFieldWithDefault(msg, 6, ""),
    availableslot: jspb.Message.getFieldWithDefault(msg, 7, 0),
    totalslot: jspb.Message.getFieldWithDefault(msg, 8, 0),
    version: jspb.Message.getFieldWithDefault(msg, 9, 0),
    information: (f = msg.getInformation()) && proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpeninghour(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClosinghour(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableslot(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalslot(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 10:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinaryFromReader);
      msg.setInformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getOpeninghour();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClosinghour();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAvailableslot();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTotalslot();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getInformation();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ParkingLotType type = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getType = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string openingHour = 5;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getOpeninghour = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setOpeninghour = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string closingHour = 6;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getClosinghour = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setClosinghour = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 availableSlot = 7;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getAvailableslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setAvailableslot = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 totalSlot = 8;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getTotalslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setTotalslot = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 version = 9;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional ParkingLotInformation information = 10;
 * @return {?proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getInformation = function() {
  return /** @type{?proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} */ (
    jspb.Message.getWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation, 10));
};


/**
 * @param {?proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation|undefined} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setInformation = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.clearInformation = function() {
  return this.setInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.hasInformation = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lowerboundhour: jspb.Message.getFieldWithDefault(msg, 3, 0),
    upperboundhour: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unitprice: jspb.Message.getFieldWithDefault(msg, 5, 0),
    version: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLowerboundhour(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpperboundhour(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnitprice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLowerboundhour();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUpperboundhour();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUnitprice();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 parkingLotId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 lowerBoundHour = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getLowerboundhour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setLowerboundhour = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 upperBoundHour = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getUpperboundhour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setUpperboundhour = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 unitPrice = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getUnitprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setUnitprice = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 version = 6;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setParkinglotidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 parkingLotId = 1;
 * @return {!Array<number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.getParkinglotidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.setParkinglotidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.addParkinglotid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.clearParkinglotidList = function() {
  return this.setParkinglotidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    radiustoscan: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nresult: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRadiustoscan(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getRadiustoscan();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNresult();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 radiusToScan = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getRadiustoscan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setRadiustoscan = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 nResult = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getNresult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setNresult = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
    availableslot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalslot: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableslot(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalslot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAvailableslot();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotalslot();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 availableSlot = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.getAvailableslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.setAvailableslot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 totalSlot = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.getTotalslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.setTotalslot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotresultList: jspb.Message.toObjectList(msg.getParkinglotresultList(),
    proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinaryFromReader);
      msg.addParkinglotresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ParkingLotResult parkingLotResult = 1;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.getParkinglotresultList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult, 1));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.setParkinglotresultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.addParkinglotresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.clearParkinglotresultList = function() {
  return this.setParkinglotresultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyword: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parkinglottype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    availableonly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (reader.readEnum());
      msg.setParkinglottype(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailableonly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParkinglottype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAvailableonly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string keyword = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.setKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ParkingLotType parkingLotType = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.getParkinglottype = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.setParkinglottype = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool availableOnly = 3;
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.getAvailableonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotRequest.prototype.setAvailableonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyword: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parkinglottype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    availableonly: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    nrow: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (reader.readEnum());
      msg.setParkinglottype(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAvailableonly(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNrow(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParkinglottype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getAvailableonly();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNrow();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string keyword = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.setKeyword = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ParkingLotType parkingLotType = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.getParkinglottype = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.setParkinglottype = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool availableOnly = 3;
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.getAvailableonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.setAvailableonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 nRow = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.getNrow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.setNrow = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pageNumber = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotList: jspb.Message.toObjectList(msg.getParkinglotList(),
    proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.deserializeBinaryFromReader);
      msg.addParkinglot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ParkingLot parkingLot = 1;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.prototype.getParkinglotList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot, 1));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.prototype.setParkinglotList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.prototype.addParkinglot = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotResponse.prototype.clearParkinglotList = function() {
  return this.setParkinglotList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    employeeidList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setEmployeeidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEmployeeidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int64 employeeId = 2;
 * @return {!Array<number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.getEmployeeidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.setEmployeeidList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.addEmployeeid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.prototype.clearEmployeeidList = function() {
  return this.setEmployeeidList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoList: jspb.Message.toObjectList(msg.getInfoList(),
    proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ParkingLotEmployeeInfo info = 1;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo, 1));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.prototype.setInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.prototype.addInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotEmployeeInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteParkingLotNotification.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setParkinglotidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 parkingLotId = 1;
 * @return {!Array<number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.prototype.getParkinglotidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.prototype.setParkinglotidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.prototype.addParkinglotid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.DeleteMultiParkingLotByIdRequest.prototype.clearParkinglotidList = function() {
  return this.setParkinglotidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parkinglotname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nrating: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ratingaverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParkinglotname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNrating(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRatingaverage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParkinglotname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNrating();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRatingaverage();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string parkingLotName = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.getParkinglotname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.setParkinglotname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 nRating = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.getNrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.setNrating = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double ratingAverage = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.getRatingaverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.prototype.setRatingaverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.toObject = function(includeInstance, msg) {
  var f, obj = {
    ratingid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rating: jspb.Message.getFieldWithDefault(msg, 3, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastupdated: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRatingid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastupdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRatingid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastupdated();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int64 ratingId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getRatingid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setRatingid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 rating = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setRating = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string comment = 4;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string lastUpdated = 5;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getLastupdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setLastupdated = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lowerboundrating: jspb.Message.getFieldWithDefault(msg, 1, 0),
    upperboundrating: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLowerboundrating(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpperboundrating(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLowerboundrating();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUpperboundrating();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 lowerBoundRating = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.prototype.getLowerboundrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.prototype.setLowerboundrating = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 upperBoundRating = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.prototype.getUpperboundrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotHasRatingsRequest.prototype.setUpperboundrating = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rating: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rating = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllRatingsOfParkingLotRequest.prototype.setRating = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lowerboundrating: jspb.Message.getFieldWithDefault(msg, 1, 0),
    upperboundrating: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sortratingasc: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    nrow: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLowerboundrating(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpperboundrating(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSortratingasc(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNrow(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLowerboundrating();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUpperboundrating();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSortratingasc();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNrow();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 lowerBoundRating = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.getLowerboundrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.setLowerboundrating = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 upperBoundRating = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.getUpperboundrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.setUpperboundrating = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool sortRatingAsc = 3;
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.getSortratingasc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.setSortratingasc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 nRow = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.getNrow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.setNrow = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pageNumber = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    detailList: jspb.Message.toObjectList(msg.getDetailList(),
    proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.deserializeBinaryFromReader);
      msg.addDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetailList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ParkingLotRatingsDetail detail = 1;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.prototype.getDetailList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail, 1));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.prototype.setDetailList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.prototype.addDetail = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingsDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllParkingLotHasRatingsResponse.prototype.clearDetailList = function() {
  return this.setDetailList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rating: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sortlastupdatedasc: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    nrow: jspb.Message.getFieldWithDefault(msg, 4, 0),
    pagenumber: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSortlastupdatedasc(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNrow(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSortlastupdatedasc();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getNrow();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPagenumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rating = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.setRating = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool sortLastUpdatedAsc = 3;
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.getSortlastupdatedasc = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.setSortlastupdatedasc = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 nRow = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.getNrow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.setNrow = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 pageNumber = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.getPagenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotRequest.prototype.setPagenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ratingList: jspb.Message.toObjectList(msg.getRatingList(),
    proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.deserializeBinaryFromReader);
      msg.addRating(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRatingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ParkingLotRating rating = 1;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.prototype.getRatingList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating, 1));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.prototype.setRatingList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.prototype.addRating = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetAllRatingsOfParkingLotResponse.prototype.clearRatingList = function() {
  return this.setRatingList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.toObject = function(includeInstance, msg) {
  var f, obj = {
    ratingcountMap: (f = msg.getRatingcountMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getRatingcountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readInt64, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRatingcountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * map<int32, int64> ratingCount = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.prototype.getRatingcountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRatingCountGroupByRating.prototype.clearRatingcountMap = function() {
  this.getRatingcountMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newavailability: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewavailability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNewavailability();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 newAvailability = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.prototype.getNewavailability = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.UpdateParkingLotAvailabilityRequest.prototype.setNewavailability = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setParkinglotidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 parkingLotId = 1;
 * @return {!Array<number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.prototype.getParkinglotidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.prototype.setParkinglotidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.prototype.addParkinglotid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapRequest.prototype.clearParkinglotidList = function() {
  return this.setParkinglotidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotnameMap: (f = msg.getParkinglotnameMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getParkinglotnameMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotnameMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * map<int64, string> parkingLotName = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.prototype.getParkinglotnameMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.MapToParkingLotNameMapResponse.prototype.clearParkinglotnameMap = function() {
  this.getParkinglotnameMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    typecountMap: (f = msg.getTypecountMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getTypecountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt64, jspb.BinaryReader.prototype.readInt64, null, 0, 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypecountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeInt64, jspb.BinaryWriter.prototype.writeInt64);
  }
};


/**
 * map<int64, int64> typeCount = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.prototype.getTypecountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CountAllParkingLotGroupByTypeResponse.prototype.clearTypecountMap = function() {
  this.getTypecountMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rating: jspb.Message.getFieldWithDefault(msg, 2, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int64 parkingLotId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rating = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.setRating = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string comment = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.CreateNewRatingRequest.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    employeeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmployeeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmployeeid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 employeeId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.prototype.getEmployeeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.prototype.setEmployeeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 parkingLotId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.AddEmployeeOfParkingLotRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    employeeid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    deleteemployee: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEmployeeid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleteemployee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmployeeid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getDeleteemployee();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 employeeId = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.getEmployeeid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.setEmployeeid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 parkingLotId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool deleteEmployee = 3;
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.getDeleteemployee = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.RemoveEmployeeOfParkingLotRequest.prototype.setDeleteemployee = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    employeeidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setEmployeeidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmployeeidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 employeeId = 1;
 * @return {!Array<number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.prototype.getEmployeeidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.prototype.setEmployeeidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.prototype.addEmployeeid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.GetEmployeeManageParkingLotIdListResponse.prototype.clearEmployeeidList = function() {
  return this.setEmployeeidList([]);
};


/**
 * @enum {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType = {
  ALL: 0,
  BUILDING: 1,
  PRIVATE: 2,
  STREET: 3
};

goog.object.extend(exports, proto.com.bht.saigonparking.api.grpc.parkinglot);
