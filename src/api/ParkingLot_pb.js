// source: ParkingLot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit', null, global);
goog.exportSymbol('proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.repeatedFields_, null);
};
goog.inherits(proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.displayName = 'proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    availableslot: jspb.Message.getFieldWithDefault(msg, 6, 0),
    totalslot: jspb.Message.getFieldWithDefault(msg, 7, 0),
    distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableslot(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalslot(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getAvailableslot();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTotalslot();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ParkingLotType type = 3;
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getType = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double latitude = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double longitude = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 availableSlot = 6;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getAvailableslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setAvailableslot = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 totalSlot = 7;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getTotalslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setTotalslot = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional double distance = 8;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.prototype.setDistance = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ratingaverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    numberofrating: jspb.Message.getFieldWithDefault(msg, 5, 0),
    imagedata: msg.getImagedata_asB64(),
    version: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRatingaverage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofrating(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagedata(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRatingaverage();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getNumberofrating();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getImagedata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string phone = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional double ratingAverage = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getRatingaverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setRatingaverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 numberOfRating = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getNumberofrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setNumberofrating = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes imageData = 6;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getImagedata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes imageData = 6;
 * This is a type-conversion wrapper around `getImagedata()`
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getImagedata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagedata()));
};


/**
 * optional bytes imageData = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagedata()`
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getImagedata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagedata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setImagedata = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional int64 version = 7;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    openinghour: jspb.Message.getFieldWithDefault(msg, 5, ""),
    closinghour: jspb.Message.getFieldWithDefault(msg, 6, ""),
    availableslot: jspb.Message.getFieldWithDefault(msg, 7, 0),
    totalslot: jspb.Message.getFieldWithDefault(msg, 8, 0),
    version: jspb.Message.getFieldWithDefault(msg, 9, 0),
    information: (f = msg.getInformation()) && proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpeninghour(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setClosinghour(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableslot(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalslot(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 10:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.deserializeBinaryFromReader);
      msg.setInformation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getOpeninghour();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getClosinghour();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAvailableslot();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTotalslot();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getInformation();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ParkingLotType type = 2;
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getType = function() {
  return /** @type {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional double latitude = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double longitude = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string openingHour = 5;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getOpeninghour = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setOpeninghour = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string closingHour = 6;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getClosinghour = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setClosinghour = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 availableSlot = 7;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getAvailableslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setAvailableslot = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 totalSlot = 8;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getTotalslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setTotalslot = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 version = 9;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional ParkingLotInformation information = 10;
 * @return {?proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.getInformation = function() {
  return /** @type{?proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation} */ (
    jspb.Message.getWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation, 10));
};


/**
 * @param {?proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotInformation|undefined} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.setInformation = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.clearInformation = function() {
  return this.setInformation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLot.prototype.hasInformation = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lowerboundhour: jspb.Message.getFieldWithDefault(msg, 3, 0),
    upperboundhour: jspb.Message.getFieldWithDefault(msg, 4, 0),
    unitprice: jspb.Message.getFieldWithDefault(msg, 5, 0),
    version: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLowerboundhour(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpperboundhour(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnitprice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getLowerboundhour();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getUpperboundhour();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getUnitprice();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 parkingLotId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 lowerBoundHour = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getLowerboundhour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setLowerboundhour = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 upperBoundHour = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getUpperboundhour = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setUpperboundhour = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 unitPrice = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getUnitprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setUnitprice = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 version = 6;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotUnit.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    parkinglotid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    customerid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    customerfullname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    rating: jspb.Message.getFieldWithDefault(msg, 5, 0),
    comment: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastupdated: jspb.Message.getFieldWithDefault(msg, 7, ""),
    version: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setParkinglotid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomerid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerfullname(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRating(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastupdated(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getParkinglotid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCustomerfullname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRating();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastupdated();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 parkingLotId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getParkinglotid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setParkinglotid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 customerId = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getCustomerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string customerFullName = 4;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getCustomerfullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setCustomerfullname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 rating = 5;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getRating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setRating = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string comment = 6;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string lastUpdated = 7;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getLastupdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setLastupdated = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 version = 8;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotRating.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    customerid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    customerfullname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parkinglotname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    ishandled: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    lastupdated: jspb.Message.getFieldWithDefault(msg, 9, ""),
    version: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomerid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerfullname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParkinglotname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIshandled(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastupdated(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCustomerid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getCustomerfullname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParkinglotname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getIshandled();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getLastupdated();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 customerId = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getCustomerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string customerFullName = 3;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getCustomerfullname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setCustomerfullname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string parkingLotName = 4;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getParkinglotname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setParkinglotname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double latitude = 6;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double longitude = 7;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool isHandled = 8;
 * @return {boolean}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getIshandled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setIshandled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string lastUpdated = 9;
 * @return {string}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getLastupdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setLastupdated = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 version = 10;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotSuggestion.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt64());
      msg.setParkinglotidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 parkingLotId = 1;
 * @return {!Array<number>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.getParkinglotidList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.setParkinglotidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.addParkinglotid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotIdList.prototype.clearParkinglotidList = function() {
  return this.setParkinglotidList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    radiustoscan: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nresult: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRadiustoscan(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getRadiustoscan();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNresult();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 radiusToScan = 3;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getRadiustoscan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setRadiustoscan = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 nResult = 4;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.getNresult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ScanningByRadiusRequest.prototype.setNresult = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
    availableslot: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalslot: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailableslot(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalslot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAvailableslot();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotalslot();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 availableSlot = 1;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.getAvailableslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.setAvailableslot = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 totalSlot = 2;
 * @return {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.getTotalslot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotLimit.prototype.setTotalslot = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.toObject = function(includeInstance, msg) {
  var f, obj = {
    parkinglotresultList: jspb.Message.toObjectList(msg.getParkinglotresultList(),
    proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList;
  return proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult;
      reader.readMessage(value,proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.deserializeBinaryFromReader);
      msg.addParkinglotresult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParkinglotresultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ParkingLotResult parkingLotResult = 1;
 * @return {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult>}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.getParkinglotresultList = function() {
  return /** @type{!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult, 1));
};


/**
 * @param {!Array<!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult>} value
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} returns this
*/
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.setParkinglotresultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.addParkinglotresult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList} returns this
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotResultList.prototype.clearParkinglotresultList = function() {
  return this.setParkinglotresultList([]);
};


/**
 * @enum {number}
 */
proto.com.bht.saigonparking.api.grpc.parkinglot.ParkingLotType = {
  BUILDING: 0,
  PRIVATE: 1,
  STREET: 2
};

goog.object.extend(exports, proto.com.bht.saigonparking.api.grpc.parkinglot);
